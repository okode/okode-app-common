{"version":3,"sources":["../../src/providers/mmobile.ts"],"names":[],"mappings":"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","file":"mmobile.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { File } from '@ionic-native/file';\nimport { Device } from '@ionic-native/device';\nimport { Storage } from '@ionic/storage';\nimport { Logger } from './logger';\nimport 'rxjs/add/operator/toPromise';\n\n\nexport class MMobile {\n\n  private baseUrl: string;\n  private appName: string;\n  private version: string;\n  private jwtConfigName: string;\n  private timeout: number;\n\n  private config: any;\n\n  private logsQueue: string[] = [];\n  private isProcessingLogs = false;\n  private logger: Logger;\n\n  private static readonly INITIAL_CONFIG_PATH = 'assets/config/mmobileInitialConfig.json';\n  private static readonly LOGS_DIR = 'mmobilelogs';\n  private static readonly LOGS_SERVICE_KEY = 'MMOBILE_sendLogs';\n  private static readonly LAST_UPDATED_KEY = 'MMOBILE_lastUpdated';\n  private static readonly MMOBILE_CONFIG = 'MMOBILE_config';\n\n  constructor(\n    private http: HttpClient,\n    private file: File,\n    private device: Device,\n    private storage: Storage\n  )  {}\n\n  init(baseUrl: string, appName: string, version: string, jwtConfigName?: string, timeout?: number) {\n    return new Promise<boolean>((resolve, reject) => {\n      this.baseUrl = baseUrl;\n      this.appName = appName;\n      this.version = version;\n      this.jwtConfigName = jwtConfigName;\n      this.timeout = timeout;\n\n      this.prepareLogs();\n\n      let url = `${baseUrl}/config/${appName}/${version}`;\n      let observable = this.http.get(url);\n      if (timeout) {\n        observable = observable.timeout(timeout);\n      }\n      observable.toPromise()\n        .then(result => {\n          this.config = result;\n          this.storage.ready()\n            .then(() => {\n              return this.storage.set(MMobile.MMOBILE_CONFIG, this.config);\n            })\n            .then(() => {\n              return this.storage.set(MMobile.LAST_UPDATED_KEY, new Date());\n            })\n            .then(() => {\n              resolve(true);\n            });\n        })\n        .catch((error: any) => {\n          this.printLog(`Error downloading MMobile config. Check it out: ${url}`);\n          this.storage.ready()\n            .then(() => {\n              return this.storage.get(MMobile.MMOBILE_CONFIG);\n            })\n            .then(config => {\n              if (config != null) {\n                this.config = config;\n                resolve(false);\n              } else {\n                this.http.get(MMobile.INITIAL_CONFIG_PATH).toPromise()\n                .then(result => {\n                  this.config = result;\n                  this.storage.ready()\n                    .then(() => {\n                      return this.storage.get(MMobile.LAST_UPDATED_KEY);\n                    })\n                    .then(lastUpdatedDate => {\n                      if (lastUpdatedDate == null) {\n                        return this.storage.set(MMobile.LAST_UPDATED_KEY, new Date());\n                      } else {\n                        return Promise.resolve();\n                      }\n                    })\n                    .then(() => {\n                      resolve(false);\n                    });\n                })\n                .catch((error: any) => {\n                  this.printLog(`Error loading MMobile initial config. Reason: ${JSON.stringify(error)}`);\n                  reject();\n                });\n              }\n            });\n        });\n    });\n  }\n\n  reloadConfig() {\n    this.checkIfIsInitialized();\n    return this.init(this.baseUrl, this.appName, this.version, this.jwtConfigName, this.timeout);\n  }\n\n  getCustomConfig() {\n    this.checkIfIsInitialized();\n    return this.config.customConfig;\n  }\n\n  getVersion() {\n    return this.version;\n  }\n\n  getTimeout() {\n    this.checkIfIsInitialized();\n    return this.config.timeout;\n  }\n\n  isActive() {\n    this.checkIfIsInitialized();\n    return this.config.active;\n  }\n\n  getFeatures() {\n    this.checkIfIsInitialized();\n    return this.config.features;\n  }\n\n  isDeviceLocked() {\n    this.checkIfIsInitialized();\n\n    let mobileLockInfo = this.config.lockingConfig;\n    if (mobileLockInfo == null || !mobileLockInfo.active) {\n      return false;\n    }\n\n    let deviceVersion = this.device.version;\n    let deviceModel = this.device.model;\n    let devicePlatform = this.device.platform;\n\n    let deviceMatched = false;\n    mobileLockInfo.devices.forEach((deviceLockInfo: any) => {\n      if (deviceMatched) return;\n\n      let modelMatch = true;\n      let versionMatch = true;\n      let platformMatch = true;\n\n      // Matching model\n      if (deviceLockInfo.model != null) {\n        let re = new RegExp(deviceLockInfo.model, 'i');\n        modelMatch = re.test(deviceModel);\n      }\n\n      // Matching version\n      if (deviceLockInfo.version != null) {\n        let re = new RegExp(deviceLockInfo.version, 'i');\n        versionMatch = re.test(deviceVersion);\n      }\n\n      // Matching platform\n      if (deviceLockInfo.platform != null) {\n        let re = new RegExp(deviceLockInfo.platform, 'i');\n        platformMatch = re.test(devicePlatform);\n      }\n\n      if (modelMatch && platformMatch && versionMatch) {\n        deviceMatched = true;\n      }\n    });\n\n    if (mobileLockInfo.mode == 'WHITELIST') {\n      return !deviceMatched;\n    } else {\n      return deviceMatched;\n    }\n  }\n\n  getLastUpdatedDate() {\n    this.checkIfIsInitialized();\n\n    return new Promise<Date>((resolve, reject) => {\n      this.storage.ready()\n      .then(() => {\n        return this.storage.get(MMobile.LAST_UPDATED_KEY);\n      })\n      .then(date => {\n        resolve (new Date(date));\n      })\n      .catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  async writeLog(log: string) {\n    let message = `>>>>>>> ${this.getFormattedDateWithHour()}: ${log}` + '\\n';\n    this.logsQueue.push(message);\n    \n    if (!this.isProcessingLogs) {\n      this.processLogs();\n    }\n  }\n\n  private processLogs() {\n    if (!this.logsQueue.length) {\n      this.isProcessingLogs = false;\n      return;\n    }\n\n    this.isProcessingLogs = true;\n    let m = this.logsQueue.shift();\n\n    this.file.writeFile(`${this.file.dataDirectory}${MMobile.LOGS_DIR}/`, this.getLogsFileName(), m, {append: true})\n      .then(() => this.processLogs())\n      .catch(err => {\n        this.printLog(`Error writing log to file. Discarding it. Reason: ${JSON.stringify(err)}`);\n        this.processLogs();\n      });\n  }\n\n  sendLogs(deviceName: string) {\n    this.checkIfIsInitialized();\n    return new Promise<boolean>((resolve, reject) => {\n      if (this.isLogsEnabled()) {\n        this.file.readAsText(`${this.file.dataDirectory}${MMobile.LOGS_DIR}/`, this.getLogsFileName())\n        .then(log => {\n          let logsUrl = `${this.baseUrl}/services/public/${this.appName}/${this.version}/${MMobile.LOGS_SERVICE_KEY}`;\n          let body = {\n            'rawlog': btoa(log),\n            'deviceId': deviceName\n          };\n          let headers = new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded'\n          });\n          return this.http.post(logsUrl, this.jsonToURLEncoded(body), { headers: headers, responseType: 'text' }).toPromise();\n        })\n        .then(result => {\n          resolve(true);\n        })\n        .catch(error => {\n          this.writeLog(`Error sending MMobile logs. Reason: ${JSON.stringify(error)}`);\n          resolve(false);\n        });\n      } else {\n        this.writeLog('Logs service is not enabled');\n        resolve(false);\n      }\n    });\n  }\n\n  isLogsEnabled() {\n    this.checkIfIsInitialized();\n    return (this.config.services !== null\n            && this.config.services[MMobile.LOGS_SERVICE_KEY] !== null\n            && this.config.services[MMobile.LOGS_SERVICE_KEY] !== null);\n  }\n\n  getServiceUrl(key: string) {\n    this.checkIfIsInitialized();\n    let service = this.config.services[key];\n    if (service != null) {\n      if (service.mediated == false) {\n        return service.path;\n      }\n      return (`${this.baseUrl}${service.prefix}/${this.appName}/${this.version}/${key}`);\n    } else {\n      this.printLog(`Service was not found: ${key}`);\n      return null;\n    }\n  }\n\n  getJwtLoginUrl() {\n    this.checkIfIsInitialized();\n    if (this.jwtConfigName) {\n      return `${this.baseUrl}/jwt/login/${this.appName}/${this.version}/${this.jwtConfigName}`;\n    } else {\n      this.printLog(`jwtConfigName service is not enabled`);\n      return null;\n    }\n  }\n\n  isInitialized() {\n    return this.config != null;\n  }\n\n  setLogger(logger: Logger) {\n    this.logger = logger;\n  }\n\n  private prepareLogs() {\n    this.file.checkDir(this.file.dataDirectory, MMobile.LOGS_DIR)\n      .then(() => {\n        // Logs directory exists. Check if the file is created for today\n         this.file.checkFile(`${this.file.dataDirectory}${MMobile.LOGS_DIR}/`, this.getLogsFileName())\n          .then(() => {\n            // Logs file exists for today, nothing to do\n          })\n          .catch(err => {\n            this.file.removeRecursively(this.file.dataDirectory, MMobile.LOGS_DIR)\n              .then(() => {\n                this.prepareLogs();\n              });\n          });\n      })\n      .catch(err => {\n        if (err == 'cordova_not_available') {\n          this.printLog(`Cordova not enabled. Discarding it. Reason: ${JSON.stringify(err)}`);\n          return;\n        }\n        this.file.createDir(this.file.dataDirectory, MMobile.LOGS_DIR, false)\n          .then(() => {\n            this.file.createFile(`${this.file.dataDirectory}${MMobile.LOGS_DIR}/`, this.getLogsFileName(), true);\n          });\n      });\n  }\n\n  private getFormattedDateWithHour() {\n    let now = new Date();\n    let dd = ('0' + now.getDate()).slice(-2);\n    let MM = ('0' + (now.getMonth() + 1)).slice(-2);\n    let yyyy = now.getFullYear();\n    let hh = ('0' + now.getHours()).slice(-2);\n    let mm = ('0' + now.getMinutes()).slice(-2);\n    let ss = ('0' + now.getSeconds()).slice(-2);\n\n    return `${dd}/${MM}/${yyyy} ${hh}:${mm}:${ss}`;\n  }\n\n  private getLogsFileName() {\n    let now = new Date();\n    let dd = ('0' + now.getDate()).slice(-2);\n    let MM = ('0' + (now.getMonth() + 1)).slice(-2);\n    let yyyy = now.getFullYear();\n\n    return `log${dd}${MM}${yyyy}.txt`;\n  }\n\n  private jsonToURLEncoded(jsonString: Object) {\n    return Object.keys(jsonString).map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(jsonString[key])).join('&');\n  }\n\n  private checkIfIsInitialized() {\n    if (this.config == null) {\n      throw({ message: 'MMobile is not initialized', needsRestartApp: true });\n    }\n  }\n\n  private printLog(message?: any, ...optionalParams: any[]) {\n    if (this.logger == null) {\n      console.log(message, optionalParams);\n    } else {\n      this.logger.i(message, optionalParams);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: File, },\n{type: Device, },\n{type: Storage, },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}