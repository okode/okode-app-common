import { EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { Item, Form, NavController, Platform } from 'ionic-angular';
export declare class SelectSearchable implements ControlValueAccessor, OnDestroy, OnChanges {
    private navController;
    private ionForm;
    private platform;
    private ionItem;
    private _items;
    private isIos;
    private isMd;
    filterText: string;
    value: any;
    hasSearchEvent: boolean;
    items: any[];
    isSearching: boolean;
    itemValueField: string;
    itemTextField: string;
    canSearch: boolean;
    canReset: boolean;
    title: string;
    searchPlaceholder: string;
    onChange: EventEmitter<any>;
    onSearch: EventEmitter<any>;
    itemTemplate: Function;
    multiple: boolean;
    constructor(navController: NavController, ionForm: Form, platform: Platform, ionItem: Item);
    isNullOrWhiteSpace(value: any): boolean;
    ngOnInit(): void;
    initFocus(): void;
    _click(event: UIEvent): void;
    select(selectedItem: any): void;
    emitChange(): void;
    emitSearch(): void;
    open(): void;
    reset(): void;
    formatItem(value: any): string;
    formatValue(): string;
    private propagateChange;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    ngOnDestroy(): void;
    setValue(value: any): void;
    ngOnChanges(changes: SimpleChanges): void;
}
